---
title: "Cash flow - reconciliation"
author: "Maria"
format: html
toc: true
toc-depth: 3
code-fold: true
code-copy: true
execute:
  echo: false
  warning: false
---


```{r}
library(tidyverse)
library(janitor)
```

## Cash flows - bank reconciliation

We continue with our series for "nerdy" accountants who want to diverge from Excel and master the power of R automation (and beauty!)

Today we are going to have a look at the step that comes before cash flow visualization. Much much earlier.... Before we are able to put cash flow items on a nice graph, we need to "somehow" have those cash flow items.

Accountants don't have them by default, and there is no magic way to have them but rather than go transaction by transaction, classify and group them, collate them and double-check that they actually occurred! We need to make sure that we are not double-charged as well as we are not underpaying or omitting any of our payments and they are all included in the list.

We start backwards from this very list and we dig into doing bank reconciliation and in particular, looking at our (business) bank statement. Indeed, a very useful exercise - not only in regards to your business but also for your own expense management.


```{r}

cf<-read_csv("data/bank_st.csv")
cf2<-read_csv("data/bank_st2.csv")

cf%>%head()
```
Column names have blanks and they do not play well in functions, so let's use `clean_names()` from `janitor` package to make them more R friendly

```{r}

cf<-cf%>%
  clean_names()

cf%>%head()
```
That's better! so now all variables are in small letters and have camel_case!

Let's explore the data and do some simple **counting** - yes, we love to count!

Let's see which day has the most transactions and which category is the most used one (what is the money drainer!):

```{r}
cf%>%count(day, sort=TRUE)

cf%>%count(category, sort=TRUE)

cf%>%ggplot(aes(category))+
  geom_bar()+
  theme_minimal()
```
For a real business, this amount of Saturday transactions would raise a red flag, but - this data is from personal records, so looks like someone is having a blast off after a busy week :)

Also, with `category` that `None` does not sound right.... it is the second highest so... I would really investigate what sort of `None` is that `None`...

```{r}
cf%>%count(day, category, sort=TRUE)
```
```{r}
cf%>%count(category, day, sort=TRUE)
```

Let's have a look at the average spend 

....

## References

https://www.kaggle.com/datasets/sandhaya4u/august-bank-statement-sandhaya 
